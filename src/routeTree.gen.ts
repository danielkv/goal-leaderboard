/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardWorkoutsIndexImport } from './routes/dashboard/workouts/index'
import { Route as DashboardSubscriptionsIndexImport } from './routes/dashboard/subscriptions/index'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard/settings/index'
import { Route as DashboardScoreIndexImport } from './routes/dashboard/score/index'
import { Route as DashboardCheckinIndexImport } from './routes/dashboard/checkin/index'
import { Route as DashboardCategoriesIndexImport } from './routes/dashboard/categories/index'
import { Route as DashboardScorescoreWorkoutScoreImport } from './routes/dashboard/score/(score)/workoutScore'
import { Route as DashboardScorescoreChooseCategoryWorkoutImport } from './routes/dashboard/score/(score)/chooseCategoryWorkout'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardWorkoutsIndexRoute = DashboardWorkoutsIndexImport.update({
  id: '/workouts/',
  path: '/workouts/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSubscriptionsIndexRoute =
  DashboardSubscriptionsIndexImport.update({
    id: '/subscriptions/',
    path: '/subscriptions/',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardScoreIndexRoute = DashboardScoreIndexImport.update({
  id: '/score/',
  path: '/score/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCheckinIndexRoute = DashboardCheckinIndexImport.update({
  id: '/checkin/',
  path: '/checkin/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCategoriesIndexRoute = DashboardCategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardScorescoreWorkoutScoreRoute =
  DashboardScorescoreWorkoutScoreImport.update({
    id: '/score/(score)/workoutScore',
    path: '/score/workoutScore',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardScorescoreChooseCategoryWorkoutRoute =
  DashboardScorescoreChooseCategoryWorkoutImport.update({
    id: '/score/(score)/chooseCategoryWorkout',
    path: '/score/chooseCategoryWorkout',
    getParentRoute: () => DashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/categories/': {
      id: '/dashboard/categories/'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/checkin/': {
      id: '/dashboard/checkin/'
      path: '/checkin'
      fullPath: '/dashboard/checkin'
      preLoaderRoute: typeof DashboardCheckinIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/score/': {
      id: '/dashboard/score/'
      path: '/score'
      fullPath: '/dashboard/score'
      preLoaderRoute: typeof DashboardScoreIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/subscriptions/': {
      id: '/dashboard/subscriptions/'
      path: '/subscriptions'
      fullPath: '/dashboard/subscriptions'
      preLoaderRoute: typeof DashboardSubscriptionsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/workouts/': {
      id: '/dashboard/workouts/'
      path: '/workouts'
      fullPath: '/dashboard/workouts'
      preLoaderRoute: typeof DashboardWorkoutsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/score/(score)/chooseCategoryWorkout': {
      id: '/dashboard/score/(score)/chooseCategoryWorkout'
      path: '/score/chooseCategoryWorkout'
      fullPath: '/dashboard/score/chooseCategoryWorkout'
      preLoaderRoute: typeof DashboardScorescoreChooseCategoryWorkoutImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/score/(score)/workoutScore': {
      id: '/dashboard/score/(score)/workoutScore'
      path: '/score/workoutScore'
      fullPath: '/dashboard/score/workoutScore'
      preLoaderRoute: typeof DashboardScorescoreWorkoutScoreImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCategoriesIndexRoute: typeof DashboardCategoriesIndexRoute
  DashboardCheckinIndexRoute: typeof DashboardCheckinIndexRoute
  DashboardScoreIndexRoute: typeof DashboardScoreIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
  DashboardSubscriptionsIndexRoute: typeof DashboardSubscriptionsIndexRoute
  DashboardWorkoutsIndexRoute: typeof DashboardWorkoutsIndexRoute
  DashboardScorescoreChooseCategoryWorkoutRoute: typeof DashboardScorescoreChooseCategoryWorkoutRoute
  DashboardScorescoreWorkoutScoreRoute: typeof DashboardScorescoreWorkoutScoreRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCategoriesIndexRoute: DashboardCategoriesIndexRoute,
  DashboardCheckinIndexRoute: DashboardCheckinIndexRoute,
  DashboardScoreIndexRoute: DashboardScoreIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  DashboardSubscriptionsIndexRoute: DashboardSubscriptionsIndexRoute,
  DashboardWorkoutsIndexRoute: DashboardWorkoutsIndexRoute,
  DashboardScorescoreChooseCategoryWorkoutRoute:
    DashboardScorescoreChooseCategoryWorkoutRoute,
  DashboardScorescoreWorkoutScoreRoute: DashboardScorescoreWorkoutScoreRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/categories': typeof DashboardCategoriesIndexRoute
  '/dashboard/checkin': typeof DashboardCheckinIndexRoute
  '/dashboard/score': typeof DashboardScoreIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/subscriptions': typeof DashboardSubscriptionsIndexRoute
  '/dashboard/workouts': typeof DashboardWorkoutsIndexRoute
  '/dashboard/score/chooseCategoryWorkout': typeof DashboardScorescoreChooseCategoryWorkoutRoute
  '/dashboard/score/workoutScore': typeof DashboardScorescoreWorkoutScoreRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/categories': typeof DashboardCategoriesIndexRoute
  '/dashboard/checkin': typeof DashboardCheckinIndexRoute
  '/dashboard/score': typeof DashboardScoreIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/subscriptions': typeof DashboardSubscriptionsIndexRoute
  '/dashboard/workouts': typeof DashboardWorkoutsIndexRoute
  '/dashboard/score/chooseCategoryWorkout': typeof DashboardScorescoreChooseCategoryWorkoutRoute
  '/dashboard/score/workoutScore': typeof DashboardScorescoreWorkoutScoreRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/categories/': typeof DashboardCategoriesIndexRoute
  '/dashboard/checkin/': typeof DashboardCheckinIndexRoute
  '/dashboard/score/': typeof DashboardScoreIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/subscriptions/': typeof DashboardSubscriptionsIndexRoute
  '/dashboard/workouts/': typeof DashboardWorkoutsIndexRoute
  '/dashboard/score/(score)/chooseCategoryWorkout': typeof DashboardScorescoreChooseCategoryWorkoutRoute
  '/dashboard/score/(score)/workoutScore': typeof DashboardScorescoreWorkoutScoreRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/categories'
    | '/dashboard/checkin'
    | '/dashboard/score'
    | '/dashboard/settings'
    | '/dashboard/subscriptions'
    | '/dashboard/workouts'
    | '/dashboard/score/chooseCategoryWorkout'
    | '/dashboard/score/workoutScore'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/dashboard/categories'
    | '/dashboard/checkin'
    | '/dashboard/score'
    | '/dashboard/settings'
    | '/dashboard/subscriptions'
    | '/dashboard/workouts'
    | '/dashboard/score/chooseCategoryWorkout'
    | '/dashboard/score/workoutScore'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/categories/'
    | '/dashboard/checkin/'
    | '/dashboard/score/'
    | '/dashboard/settings/'
    | '/dashboard/subscriptions/'
    | '/dashboard/workouts/'
    | '/dashboard/score/(score)/chooseCategoryWorkout'
    | '/dashboard/score/(score)/workoutScore'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/categories/",
        "/dashboard/checkin/",
        "/dashboard/score/",
        "/dashboard/settings/",
        "/dashboard/subscriptions/",
        "/dashboard/workouts/",
        "/dashboard/score/(score)/chooseCategoryWorkout",
        "/dashboard/score/(score)/workoutScore"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/categories/": {
      "filePath": "dashboard/categories/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/checkin/": {
      "filePath": "dashboard/checkin/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/score/": {
      "filePath": "dashboard/score/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/subscriptions/": {
      "filePath": "dashboard/subscriptions/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/workouts/": {
      "filePath": "dashboard/workouts/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/score/(score)/chooseCategoryWorkout": {
      "filePath": "dashboard/score/(score)/chooseCategoryWorkout.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/score/(score)/workoutScore": {
      "filePath": "dashboard/score/(score)/workoutScore.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
